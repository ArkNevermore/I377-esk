// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package main.entities;

import java.lang.Integer;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.PersistenceContext;
import javax.persistence.Version;
import main.entities.VahtkondIntsidendi;
import org.springframework.transaction.annotation.Transactional;

privileged aspect VahtkondIntsidendi_Roo_Entity {
    
    declare @type: VahtkondIntsidendi: @Entity;
    
    @PersistenceContext
    transient EntityManager VahtkondIntsidendi.entityManager;
    
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id")
    private Long VahtkondIntsidendi.id;
    
    @Version
    @Column(name = "version")
    private Integer VahtkondIntsidendi.version;
    
    public Long VahtkondIntsidendi.getId() {
        return this.id;
    }
    
    public void VahtkondIntsidendi.setId(Long id) {
        this.id = id;
    }
    
    public Integer VahtkondIntsidendi.getVersion() {
        return this.version;
    }
    
    public void VahtkondIntsidendi.setVersion(Integer version) {
        this.version = version;
    }
    
    @Transactional
    public void VahtkondIntsidendi.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void VahtkondIntsidendi.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            VahtkondIntsidendi attached = VahtkondIntsidendi.findVahtkondIntsidendi(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void VahtkondIntsidendi.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void VahtkondIntsidendi.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public VahtkondIntsidendi VahtkondIntsidendi.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        VahtkondIntsidendi merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager VahtkondIntsidendi.entityManager() {
        EntityManager em = new VahtkondIntsidendi().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long VahtkondIntsidendi.countVahtkondIntsidendis() {
        return entityManager().createQuery("SELECT COUNT(o) FROM VahtkondIntsidendi o", Long.class).getSingleResult();
    }
    
    public static List<VahtkondIntsidendi> VahtkondIntsidendi.findAllVahtkondIntsidendis() {
        return entityManager().createQuery("SELECT o FROM VahtkondIntsidendi o", VahtkondIntsidendi.class).getResultList();
    }
    
    public static VahtkondIntsidendi VahtkondIntsidendi.findVahtkondIntsidendi(Long id) {
        if (id == null) return null;
        return entityManager().find(VahtkondIntsidendi.class, id);
    }
    
    public static List<VahtkondIntsidendi> VahtkondIntsidendi.findVahtkondIntsidendiEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM VahtkondIntsidendi o", VahtkondIntsidendi.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
